openapi: 3.0.1
info:
  title: Rails BaaS API
  description: API REST moderna para Backend as a Service con autenticación JWT y Google OAuth. Las rutas de autenticación están sin versionar para mantener compatibilidad, mientras que las rutas de perfil y sistema están versionadas en v1.
  version: 1.0.0
  contact:
    name: Rails BaaS Team
    email: support@railsbaas.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: http://localhost:3000
    description: Development server
paths:
  /api/v1/info:
    get:
      tags:
        - System
      security:
        - Bearer: []
      summary: Información del sistema (v1)
      description: Obtiene información general sobre la API y el sistema. Esta ruta está versionada en v1.
      responses:
        '200':
          description: Información del sistema obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Información del sistema obtenida exitosamente
                  data:
                    type: object
                    properties:
                      api:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Rails BaaS API
                          version:
                            type: string
                            example: 1.0.0
                          description:
                            type: string
                            example: Backend as a Service construido con Ruby on Rails
                          documentation_url:
                            type: string
                            example: http://localhost:3000/api-docs
                          status:
                            type: string
                            example: operational
                      features:
                        type: object
                        properties:
                          authentication:
                            type: object
                            properties:
                              jwt:
                                type: boolean
                                example: true
                              google_oauth:
                                type: boolean
                                example: false
                              password_auth:
                                type: boolean
                                example: true
                          database:
                            type: object
                            properties:
                              adapter:
                                type: string
                                example: postgresql
                              status:
                                type: string
                                example: connected
                          admin_panel:
                            type: object
                            properties:
                              enabled:
                                type: boolean
                                example: true
                              url:
                                type: string
                                example: http://localhost:3000/admin
  /api/auth/register:
    post:
      tags:
        - Authentication
      summary: Registrar usuario
      description: Registra un nuevo usuario con email y contraseña
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user
              properties:
                user:
                  type: object
                  required:
                    - email
                    - password
                    - password_confirmation
                  properties:
                    email:
                      type: string
                      format: email
                      example: user@example.com
                    password:
                      type: string
                      minLength: 6
                      example: password123
                    password_confirmation:
                      type: string
                      example: password123
                    first_name:
                      type: string
                      example: John
                    last_name:
                      type: string
                      example: Doe
      responses:
        '201':
          description: Usuario registrado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Usuario registrado exitosamente
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
                      token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiJ9...
        '422':
          description: Error de validación
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/auth/login:
    post:
      tags:
        - Authentication
      summary: Iniciar sesión
      description: Inicia sesión con email y contraseña
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  example: password123
      responses:
        '200':
          description: Inicio de sesión exitoso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Inicio de sesión exitoso
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
                      token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiJ9...
        '401':
          description: Credenciales inválidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/auth/google:
    post:
      tags:
        - Authentication
      summary: Autenticación con Google
      description: Autentica o registra un usuario usando Google OAuth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - google_token
              properties:
                google_token:
                  type: string
                  description: Token de ID de Google
                  example: eyJhbGciOiJSUzI1NiIsImtpZCI6IjE...
      responses:
        '200':
          description: Autenticación con Google exitosa
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Autenticación con Google exitosa
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
                      token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiJ9...
        '401':
          description: Token de Google inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/me:
    get:
      tags:
        - Profile
      summary: Información del usuario actual (v1)
      description: Obtiene la información del usuario autenticado. Esta ruta está versionada en v1.
      security:
        - Bearer: []
      responses:
        '200':
          description: Información del usuario obtenida
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Información del usuario obtenida
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
        '401':
          description: Token inválido o expirado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Profile
      summary: Actualizar perfil (v1)
      description: Actualiza la información del perfil del usuario. Esta ruta está versionada en v1.
      security:
        - Bearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user
              properties:
                user:
                  type: object
                  properties:
                    first_name:
                      type: string
                      example: John
                    last_name:
                      type: string
                      example: Doe
                    email:
                      type: string
                      format: email
                      example: user@example.com
      responses:
        '200':
          description: Perfil actualizado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Perfil actualizado exitosamente
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
        '401':
          description: Token inválido o expirado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Error de validación
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token obtenido al autenticarse
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        email:
          type: string
          format: email
          example: user@example.com
        first_name:
          type: string
          example: John
        last_name:
          type: string
          example: Doe
        full_name:
          type: string
          example: John Doe
        provider:
          type: string
          enum:
            - local
            - google
          example: local
        google_id:
          type: string
          nullable: true
          example: '123456789'
        confirmed:
          type: boolean
          example: true
        confirmed_at:
          type: string
          format: date-time
          nullable: true
          example: '2024-01-01T12:00:00Z'
        created_at:
          type: string
          format: date-time
          example: '2024-01-01T12:00:00Z'
        updated_at:
          type: string
          format: date-time
          example: '2024-01-01T12:00:00Z'
    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: Error message
        errors:
          type: array
          items:
            type: string
          example:
            - Error detail 1
            - Error detail 2
tags:
  - name: Authentication
    description: Endpoints de autenticación y gestión de usuarios (sin versionar)
  - name: Profile
    description: Endpoints de gestión de perfil de usuario (v1)
  - name: System
    description: Información del sistema y estado (v1)
